% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
lives_sprite = 24 * 32 + 19;
playerX = 6;
playerY = 6;


% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = lives_sprite;
gameboard_display(1,3) = lives_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

if playerY == 1 && playerX == 9
        disp('Congratulations! You found the diamond!');
        disp('Restarting...');

        % Reset player position and snake
  while playerX == 6;
        playerY == 6;
        snake = [playerY, playerX];

        % Display initial scene with snake
        drawScene(gameScene, empty_room_sprite * ones(10, 11));

        % Continue to the next iteration of the game loop
        continue;
    end
end

disp('Game Over!');






%GAME END
%GAME REPEAT WITH REPEATED INITIALIZED SCENES SHOWN BELOWw







% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
playerX = 6;
playerY = 6;

% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = lives_sprite;
gameboard_display(1,3) = fire_deadly_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

if playerY == 1 && playerX == 9
        disp('Congratulations! You found the diamond!');
        disp('Restarting...');

        % Reset player position and snake
  while playerX == 6;
        playerY == 6;
        snake = [playerY, playerX];

        % Display initial scene with snake
        drawScene(gameScene, empty_room_sprite * ones(10, 11));

        % Continue to the next iteration of the game loop
        continue;
    end
end

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
playerX = 6;
playerY = 6;

% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = fire_deadly_sprite;
gameboard_display(1,3) = fire_deadly_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
lives_sprite = 24 * 32 + 19;
playerX = 6;
playerY = 6;


% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = lives_sprite;
gameboard_display(1,3) = lives_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

if playerY == 1 && playerX == 9
        disp('Congratulations! You found the diamond!');
        disp('Restarting...');

        % Reset player position and snake
  while playerX == 6;
        playerY == 6;
        snake = [playerY, playerX];

        % Display initial scene with snake
        drawScene(gameScene, empty_room_sprite * ones(10, 11));

        % Continue to the next iteration of the game loop
        continue;
    end
end

disp('Game Over!');

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
playerX = 6;
playerY = 6;

% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = lives_sprite;
gameboard_display(1,3) = fire_deadly_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

if playerY == 1 && playerX == 9
        disp('Congratulations! You found the diamond!');
        disp('Restarting...');

        % Reset player position and snake
  while playerX == 6;
        playerY == 6;
        snake = [playerY, playerX];

        % Display initial scene with snake
        drawScene(gameScene, empty_room_sprite * ones(10, 11));

        % Continue to the next iteration of the game loop
        continue;
    end
end

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
playerX = 6;
playerY = 6;

% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = fire_deadly_sprite;
gameboard_display(1,3) = fire_deadly_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
lives_sprite = 24 * 32 + 19;
playerX = 6;
playerY = 6;


% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = lives_sprite;
gameboard_display(1,3) = lives_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

if playerY == 1 && playerX == 9
        disp('Congratulations! You found the diamond!');
        disp('Restarting...');

        % Reset player position and snake
  while playerX == 6;
        playerY == 6;
        snake = [playerY, playerX];

        % Display initial scene with snake
        drawScene(gameScene, empty_room_sprite * ones(10, 11));

        % Continue to the next iteration of the game loop
        continue;
    end
end

disp('Game Over!');

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
playerX = 6;
playerY = 6;

% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = lives_sprite;
gameboard_display(1,3) = fire_deadly_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

if playerY == 1 && playerX == 9
        disp('Congratulations! You found the diamond!');
        disp('Restarting...');

        % Reset player position and snake
  while playerX == 6;
        playerY == 6;
        snake = [playerY, playerX];

        % Display initial scene with snake
        drawScene(gameScene, empty_room_sprite * ones(10, 11));

        % Continue to the next iteration of the game loop
        continue;
    end
end

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
playerX = 6;
playerY = 6;

% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = fire_deadly_sprite;
gameboard_display(1,3) = fire_deadly_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
lives_sprite = 24 * 32 + 19;
playerX = 6;
playerY = 6;


% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = lives_sprite;
gameboard_display(1,3) = lives_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

if playerY == 1 && playerX == 9
        disp('Congratulations! You found the diamond!');
        disp('Restarting...');

        % Reset player position and snake
  while playerX == 6;
        playerY == 6;
        snake = [playerY, playerX];

        % Display initial scene with snake
        drawScene(gameScene, empty_room_sprite * ones(10, 11));

        % Continue to the next iteration of the game loop
        continue;
    end
end

disp('Game Over!');

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
playerX = 6;
playerY = 6;

% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = lives_sprite;
gameboard_display(1,3) = fire_deadly_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

if playerY == 9 && playerX == 1
        disp('Congratulations! You found the diamond!');
        disp('Restarting...');

        % Reset player position and snake
  while playerX == 6;
        playerY == 6;
        snake = [playerY, playerX];

        % Display initial scene with snake
        drawScene(gameScene, empty_room_sprite * ones(10, 11));

        % Continue to the next iteration of the game loop
        continue;
    end
end

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
playerX = 6;
playerY = 6;

% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = fire_deadly_sprite;
gameboard_display(1,3) = fire_deadly_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
lives_sprite = 24 * 32 + 19;
playerX = 6;
playerY = 6;


% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = lives_sprite;
gameboard_display(1,3) = lives_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

if playerY == 1 && playerX == 9
        disp('Congratulations! You found the diamond!');
        disp('Restarting...');

        % Reset player position and snake
  while playerX == 6;
        playerY == 6;
        snake = [playerY, playerX];

        % Display initial scene with snake
        drawScene(gameScene, empty_room_sprite * ones(10, 11));

        % Continue to the next iteration of the game loop
        continue;
    end
end

disp('Game Over!');

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
playerX = 6;
playerY = 6;

% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = lives_sprite;
gameboard_display(1,3) = fire_deadly_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

if playerY == 1 && playerX == 9
        disp('Congratulations! You found the diamond!');
        disp('Restarting...');

        % Reset player position and snake
  while playerX == 6;
        playerY == 6;
        snake = [playerY, playerX];

        % Display initial scene with snake
        drawScene(gameScene, empty_room_sprite * ones(10, 11));

        % Continue to the next iteration of the game loop
        continue;
    end
end

% Initialize game
gameScene = simpleGameEngine('retro_pack.png', 16, 16, 4);

% Set up variables for sprites
empty_room_sprite = 0*0+1;
snake_body_sprite = 19 * 32 + 15;
fire_deadly_sprite = 10 * 32 + 16;
coin_sprite = 4 * 32 + 23;
enemy_sprite = 9 * 32 + 21;
diamond_sprite = 4 * 32 + 24; 
playerX = 6;
playerY = 6;

% Set initial player position
snake = [playerY, playerX];

% Display initial scene with snake
drawScene(gameScene, empty_room_sprite * ones(10, 11));

% Game loop
while true
    % Get user input for movement
    direction = getKeyboardInput(gameScene);

    % Update player position based on input
    switch direction
        case 'w'
            if playerY > 1
                playerY = playerY - 1;
            end
        case 's'
            if playerY < size(gameboard_display, 1)
                playerY = playerY + 1;
            end
        case 'a'
            if playerX > 1
                playerX = playerX - 1;
            end
        case 'd'
            if playerX < size(gameboard_display, 2)
                playerX = playerX + 1;
            end
        otherwise
            break;
    end


    % Check if snake touches the enemy or fire
% Check if snake touches the enemy or fire
if any(snake(:, 1) == playerY & snake(:, 2) == playerX) || ...
        gameboard_display(playerY, playerX) == fire_deadly_sprite
    disp('Game Over!');
    break;
end
    % Update snake position
    snake = [playerY, playerX; snake];

    % Display updated scene with snake
    gameboard_display = empty_room_sprite * ones(10, 11);

    % Display other sprites
gameboard_display(1,1) = lives_sprite;
gameboard_display(1,2) = fire_deadly_sprite;
gameboard_display(1,3) = fire_deadly_sprite;
gameboard_display(1,4) = fire_deadly_sprite;
gameboard_display(1,5) = fire_deadly_sprite;
gameboard_display(1,6) = fire_deadly_sprite;
gameboard_display(1,7) = fire_deadly_sprite;
gameboard_display(1,8) = fire_deadly_sprite;
gameboard_display(1,9) = fire_deadly_sprite;
gameboard_display(1,10) = fire_deadly_sprite;
gameboard_display(1,11) = fire_deadly_sprite;

gameboard_display(2,1) = fire_deadly_sprite;
gameboard_display(3,1) = fire_deadly_sprite;
gameboard_display(4,1) = fire_deadly_sprite;
gameboard_display(5,1) = fire_deadly_sprite;
gameboard_display(6,1) = fire_deadly_sprite;
gameboard_display(7,1) = fire_deadly_sprite;
gameboard_display(8,1) = fire_deadly_sprite;
gameboard_display(9,1) = fire_deadly_sprite;
gameboard_display(10,1) = fire_deadly_sprite;

gameboard_display(2,11) = fire_deadly_sprite;
gameboard_display(3,11) = fire_deadly_sprite;
gameboard_display(4,11) = fire_deadly_sprite;
gameboard_display(5,11) = fire_deadly_sprite;
gameboard_display(6,11) = fire_deadly_sprite;
gameboard_display(7,11) = fire_deadly_sprite;
gameboard_display(8,11) = fire_deadly_sprite;
gameboard_display(9,11) = fire_deadly_sprite;
gameboard_display(10,11) = fire_deadly_sprite;

gameboard_display(10,2) = fire_deadly_sprite;
gameboard_display(10,3) = fire_deadly_sprite;
gameboard_display(10,4) = fire_deadly_sprite;
gameboard_display(10,5) = fire_deadly_sprite;
gameboard_display(10,6) = fire_deadly_sprite;
gameboard_display(10,7) = fire_deadly_sprite;
gameboard_display(10,8) = fire_deadly_sprite;
gameboard_display(10,9) = fire_deadly_sprite;
gameboard_display(10,10) = fire_deadly_sprite;

gameboard_display(3,2) = coin_sprite;
gameboard_display(3,4:9) = coin_sprite;
gameboard_display(3,10) = coin_sprite;
gameboard_display(4,2) = coin_sprite;
gameboard_display(4:9,3) = coin_sprite;
gameboard_display(5,2) = coin_sprite;
gameboard_display(5:9,4) = coin_sprite;
gameboard_display(6,2:6) = coin_sprite;
gameboard_display(6:9,5) = coin_sprite;
gameboard_display(7,2:6) = coin_sprite;
gameboard_display(7:9,6) = coin_sprite;
gameboard_display(8,2:6) = coin_sprite;
gameboard_display(8:9,6) = coin_sprite;
gameboard_display(9,2:6) = coin_sprite;
gameboard_display(9:9,6) = coin_sprite;
gameboard_display(2,2) = coin_sprite;
gameboard_display(2,3) = coin_sprite;
gameboard_display(2,4) = coin_sprite;
gameboard_display(2,5) = coin_sprite;
gameboard_display(2,6) = coin_sprite;
gameboard_display(2,7) = coin_sprite;
gameboard_display(2,8) = coin_sprite;
gameboard_display(2,9) = coin_sprite;
gameboard_display(2,10) = coin_sprite;

gameboard_display(4,2) = coin_sprite;
gameboard_display(4,3) = coin_sprite;
gameboard_display(4,4) = coin_sprite;
gameboard_display(4,5) = coin_sprite;
gameboard_display(4,6) = coin_sprite;
gameboard_display(4,7) = coin_sprite;
gameboard_display(4,8) = coin_sprite;
gameboard_display(4,9) = coin_sprite;
gameboard_display(4,10) = coin_sprite;

gameboard_display(5,5) = coin_sprite;
gameboard_display(5,6) = coin_sprite;
gameboard_display(5,7) = coin_sprite;
gameboard_display(5,8) = coin_sprite;
gameboard_display(5,9) = coin_sprite;
gameboard_display(5,10) = coin_sprite;

gameboard_display(6,7) = coin_sprite;
gameboard_display(6,8) = coin_sprite;
gameboard_display(6,9) = coin_sprite;
gameboard_display(6,10) = coin_sprite;

gameboard_display(7,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,9) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,7) = coin_sprite;
gameboard_display(7,8) = coin_sprite;
gameboard_display(7,10) = coin_sprite;

gameboard_display(8,8) = coin_sprite;
gameboard_display(8,10) = coin_sprite;

gameboard_display(9,7) = coin_sprite;
gameboard_display(9,8) = coin_sprite;
gameboard_display(9,9) = coin_sprite;
gameboard_display(9,10) = coin_sprite;

gameboard_display(3,3) = fire_deadly_sprite;
gameboard_display(8,9) = fire_deadly_sprite;
gameboard_display(3,9) = fire_deadly_sprite;
gameboard_display(8,3) = fire_deadly_sprite;


gameboard_display(1,9) = diamond_sprite;


    % Display snake
    for i = 1:size(snake, 1)
        gameboard_display(snake(i, 1), snake(i, 2)) = snake_body_sprite;
    end

    % Draw the scene
    drawScene(gameScene, gameboard_display);

    % Check if the snake reaches the edge
    if playerY == 11 || playerY == size(gameboard_display, 1) || ...
       playerX == 11 || playerX == size(gameboard_display, 2)
        break;
    end
end

disp('Game Over!');

%GAME END
%END SCENES
%GAME OVER
%END
